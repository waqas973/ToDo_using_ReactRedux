{"version":3,"sources":["Components/Todo.jsx","Actions/Action.jsx","App.js","Reducers/Reducers.jsx","Store/Store.jsx","index.js"],"names":["Todo","props","useState","Input","setInput","list","useSelector","state","lists","dispatch","useDispatch","className","type","placeholder","autoComplete","id","value","onChange","e","target","name","onClick","data","payload","Date","getTime","toString","title","map","item","App","initState","Store","createStore","action","newList","filter","elem","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","store","document","getElementById"],"mappings":"+MA6CgBA,MApCf,SAAcC,GACX,MAA2BC,mBAAS,IAApC,mBAAOC,EAAP,KAAeC,EAAf,KACOC,EAAOC,aAAY,SAACC,GAAD,OAASA,EAAMC,SAClCC,EAAWC,cAElB,OACI,qBAAKC,UAAU,WAAf,SACA,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAf,oCACA,sBAAKA,UAAU,WAAf,UACI,uBAAOC,KAAK,OAAOC,YAAY,YAAYC,aAAa,MAAMC,GAAG,GAAGC,MAAOb,EAAOc,SAAU,SAACC,GAAD,OAAKd,EAASc,EAAEC,OAAOH,UACtH,mBAAGL,UAAU,sBAAsBS,KAAK,UAAUC,QAAS,kBAAIZ,GCpB3Da,EDoB4EnB,ECnBlF,CACHS,KAAM,UACNW,QAAU,CACNR,IAAI,IAAIS,MAAOC,UAAUC,WACzBJ,KAAKA,KDemFlB,EAAS,KCpB7F,IAACkB,GDoBmGK,MAAM,iBAE7G,qBAAKhB,UAAU,YAAf,SAEQN,EAAKuB,KAAI,SAACC,GACN,OAAQ,sBAAKlB,UAAU,YAAf,UACR,6BAAKkB,EAAKP,OACX,qBAAKX,UAAU,WAAf,SAEI,mBAAGA,UAAU,4BAA6BU,QAAS,kBAAIZ,ECnBxE,CACHG,KAAM,UACNG,GDiB+Fc,EAAKd,MAAMY,MAAM,qBAJvDE,EAAKd,SAWzD,qBAAKJ,UAAU,YAAf,SACG,wBAAQA,UAAU,eAAeU,QAAS,kBAAIZ,ECrBnD,CACHG,KAAM,cDoBsE,oBAAkB,aAAtF,SAAoG,wDE1BrGkB,MARf,WACE,OACI,mCACA,cAAC,EAAD,O,gBCLAC,EAAY,CACdvB,MAAQ,ICCCwB,EAAQC,aDCM,WAA+B,IAA9B1B,EAA6B,uDAArBwB,EAAYG,EAAS,uCACrD,OAAOA,EAAOtB,MACV,IAAK,UACH,MAAqBsB,EAAOX,QAArBR,EAAP,EAAOA,GAAKO,EAAZ,EAAYA,KACZ,MAAM,CACFd,MAAM,GAAD,mBACAD,EAAMC,OADN,CAEH,CACEO,GAAIA,EACJO,KAAKA,MAIf,IAAK,UACF,IAAMa,EAAU5B,EAAMC,MAAM4B,QAAO,SAACC,GAAD,OAASA,EAAKtB,KAAOmB,EAAOnB,MAC/D,MAAM,CACFP,MAAQ2B,GAGf,IAAK,WACJ,MAAO,CACH3B,MAAM,IAGX,QAAS,OAAOD,KCxBN+B,OAAOC,8BAAgCD,OAAOC,gCCAhEC,IAASC,OACP,cAAC,IAAD,CAAUC,MAAOV,EAAjB,SAAwB,cAAC,EAAD,MAExBW,SAASC,eAAe,W","file":"static/js/main.07cb3b1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from 'react';\r\nimport {AddItem,DeleteItem,ClearAll} from '../Actions/Action';\r\n\r\nimport { getData } from '../Selectors/Selector';\r\nimport { connect } from 'react-redux';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n function Todo(props) {\r\n    const [Input , setInput] = useState('');\r\n     const list = useSelector((state)=>state.lists);\r\n     const dispatch = useDispatch();\r\n       \r\n    return (\r\n        <div className='main-div'> \r\n        <div className=\"child-div\">\r\n            <div className='crud'>crud Operation in Todo</div>\r\n            <div className=\"addItems\">\r\n                <input type=\"text\" placeholder=\"Add items\" autoComplete=\"off\" id=\"\" value={Input} onChange={(e)=>setInput(e.target.value)} /> \r\n             <i className=\"fas fa-plus add-btn\" name=\"AddItem\" onClick={()=>dispatch(AddItem(Input),setInput(''))}  title=\"Add items\"  ></i> \r\n             </div> \r\n             <div className=\"showItems\">\r\n                 {\r\n                     list.map((item)=>{\r\n                         return  <div className=\"eachItem \" key={item.id} >\r\n                         <h3>{item.data}</h3>\r\n                        <div className=\"todo-btn\">\r\n                             {/* <button className=\"far fa-edit  add-btn\" title=\"Edit Items\" onClick={()=>handleEdit(item.id)}></button> */}\r\n                            <i className=\"far fa-trash-alt  add-btn\"  onClick={()=>dispatch(DeleteItem(item.id))} title=\"Delete Items\"></i>\r\n                         </div>          \r\n                     </div>\r\n                     })\r\n                 } \r\n               \r\n             </div>\r\n             <div className=\"showItems\">\r\n                <button className=\"btn effect04\" onClick={()=>dispatch(ClearAll())} data-sm-link-text=\"Remove All\" ><span>CHECK LIST</span></button>\r\n             </div>\r\n         </div> \r\n      </div>\r\n    )\r\n}\r\n\r\n\r\nexport default  Todo;","const AddItem = (data)=>{\r\n    return {\r\n        type: \"ADDITEM\",\r\n        payload : {\r\n            id: new Date().getTime().toString(),\r\n            data:data\r\n        }\r\n    } \r\n}\r\nconst DeleteItem = (id)=>{\r\n    return {\r\n        type: \"DELITEM\",\r\n        id\r\n    } \r\n}\r\nconst ClearAll = ()=>{\r\n    return {\r\n        type: \"CLEARALL\",\r\n    } \r\n}\r\n\r\nexport {AddItem , DeleteItem ,ClearAll};","import './App.css';\nimport Todo from './Components/Todo';\n\nfunction App() {\n  return (\n      <>\n      <Todo />\n      </>\n  );\n}\n\nexport default App;\n","\r\nconst initState = {\r\n    lists : []\r\n}\r\nexport const rootReducer = (state = initState , action)=>{\r\n    switch(action.type){\r\n        case \"ADDITEM\":{\r\n          const {id , data } = action.payload;\r\n          return{\r\n              lists:[\r\n                ...state.lists,  \r\n                {\r\n                  id: id,\r\n                  data:data\r\n                 }]\r\n          }\r\n        }\r\n        case \"DELITEM\":{\r\n           const newList = state.lists.filter((elem)=> elem.id !== action.id);\r\n           return{\r\n               lists : newList\r\n           }\r\n        }\r\n        case \"CLEARALL\":{\r\n         return {\r\n             lists:[]\r\n         }\r\n        }\r\n        default: return state;\r\n    }  \r\n}","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"../Reducers/Reducers\";\r\n\r\nexport const Store = createStore(\r\n    rootReducer , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider } from 'react-redux';\nimport {Store} from './Store/Store'; \nReactDOM.render(\n  <Provider store={Store}><App /></Provider>\n    ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}